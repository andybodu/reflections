When would you want to use a remote repository rather than keeping all your work local?
When working with other people, or perhaps when you work from different workstations. It's also a way to protect/backup files.
Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
Pulling automatically may risk losing work you're doing locally. 

Describe the differences between forks, clones, and branches. When would you use one instead of another?
A fork is a clone of someone's repository made on github. A clone is a local copy of a repository (either from github or locally), and a branch is an independent copy of the current commit structure.  A fork allows you to take someone's repository and develop it a different way, while retaining a link back to the original on github. It gives credit to the original developer, and can show how you have developed it in a different direction. It can also help show the popularity of a specific repository.  A clone allows you to take a repository to your local machine and work away on it.  A branch allows you to experiment and develop features without compromising the integrity of the main branch.

What is the benefit of having a copy of the last known state of the remote stored locally?
It can help compare the local repository to the remote, for merge conflicts.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
Git and Github make it easy because it tracks changes and allows people to work on the same files using various techniques to avoid interfering with the main working files. There are other systems that allow checking in / checking out of files, but they don't allow for simultaneous work and merging, so it's a better system.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

You could make changes in a separate branch for alternative versions of the program, with different features. Also if you were developing newer features it might make sense to have a separate branch. 