How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    viewing a diff highlighted the exact area where a bug may have been introduced.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    having access to the entire history of a file would allow you, viewing diffs for example, to see where changes have been introduced, and possible bugs

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    The pros are flexibility and the ability to have clear logical changes in each version. The major downside is that it depends upon the programmer to correctly choose the best moment to create a commit.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    There are cases where functionality and style depend upon multiple files, so changes in one file need to be reflected in other related files. Files in systems like Google Docs are generally stand-alone whether they be spreadsheets or documents.

How can you use the commands git log and git diff to view the history of files?

    git log will give a list of the different commits, along with the comments by programmers. When we have versions we want to compare, we use git diff and the committ ids of the versions we want to compare.

How might using version control make you more confident to make changes that
could break something?

   When you make changes, if you're correctly using version control, if you introduce a problem it can be easy to track down and resolve.

Now that you have your workspace set up, what do you want to try using Git for?

    setting up wordpress repositories for projects